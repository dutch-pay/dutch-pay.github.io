{"version":3,"sources":["components/ProgressStep.js","components/DutchProgressBar.js","components/ExpenditureInfo.js","components/NewBillForm.js","components/BillsTable.js","components/BillsInfo.js","components/Settlement.js","components/DutchForm.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["ProgressStep","props","className","title","completed","icon","faCheck","alt","step","DutchProgressBar","steps","Container","id","fluid","ProgressBar","now","currentStep","length","Row","map","i","Col","key","xs","ExpenditureInfo","currencies","useState","validated","setValidated","peopleNames","currency","info","setInfo","handleInputChange","event","target","name","value","display","Form","noValidate","onSubmit","preventDefault","stopPropagation","currentTarget","checkValidity","expenditureInfo","onSubmitSucceeded","join","style","position","Group","controlId","Label","faMoneyCheckAlt","Control","required","type","placeholder","defaultValue","onChange","faUsers","Text","faDollarSign","ToggleButtonGroup","_","ToggleButton","Button","faArrowRight","NewBillForm","billDate","billName","billAmount","billPayer","billInfo","setBillInfo","valueAsNumber","Card","Body","Title","form","Date","toJSON","reset","md","faMoneyBillWave","InputGroup","Prepend","currencySymbol","faUser","as","faStore","faCalendarAlt","faPlus","BillsTable","columnNames","actionsShow","pop","Table","responsive","additionalClassName","columnName","bills","bill","index","toLocaleString","variant","onClick","onBillDeletionClicked","faTrashAlt","defaultProps","BillsInfo","setBills","toastShow","setToastShow","defaultBillExists","newBills","concat","onBillUpdated","billToDelete","deletedBills","filter","Toast","onClose","show","delay","autohide","Header","faExclamationTriangle","Settlement","reportElem","useRef","settlementTableElem","downloading","setDownloading","copiedToastShow","setCopiedToastShow","downloadToastShow","setDownloadToastShow","expenditure","sum","flatMap","b","reduce","a","parseInt","amountByPerson","transactions","debtByPerson","sort","amount","left","right","receiver","sender","receiverAmount","senderAmount","push","Math","abs","debt","forEach","Object","keys","transactionToString","round","ref","Subtitle","border","borderless","size","transaction","faPaperPlane","$text","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","faCopy","current","classList","add","domtoimage","toBlob","then","blob","remove","saveAs","split","faSpinner","spin","faDownload","span","offset","href","faRedo","codec","require","DutchForm","state","expenditureInfoDisplayed","billsInfoDisplayed","resultDisplayed","afterStep1Submitted","bind","afterStep2Submitted","updateBillInfo","generateURL","this","compressedURL","getElementById","scrollIntoView","decompress","json","setState","compress","newURL","window","location","origin","pathname","alert","trim","faShareAlt","Component","Footer","rel","faLinkedin","faGithub","App","scrollToForm","behavior","faDivide","params","URLSearchParams","search","has","get","getCompressedURL","height","src","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c121d059.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/ProgressStep.scss'\n\nfunction ProgressStep(props) {\n  return (\n    <div className=\"progress-step\">\n      <div className=\"title\"><span>{props.title}</span></div>\n      <div className={`step rounded-circle ${props.completed ? 'completed-step': ''}`}>\n      { props.completed ?\n          <FontAwesomeIcon icon={faCheck}\n                           className=\"checked\"\n                           alt=\"checked\"/> :\n          <span className=\"number\">{props.step}</span>\n      }\n      </div>\n    </div>\n  );\n}\nexport default ProgressStep;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport ProgressStep from 'components/ProgressStep'\nimport 'components/DutchProgressBar.scss'\n\nfunction DutchProgressBar(props) {\n  const steps = [\n    \"Enter info.\",\n    \"Enter bills\",\n    \"Get result\"\n  ]\n\n  return (\n    <Container id=\"progress-bar\" fluid>\n      <ProgressBar now={(props.currentStep - 1) * 100 / (steps.length - 1)} />\n      <Row>\n        { steps.map((step, i) => (\n          <Col key={i+step} xs={12 / steps.length}>\n            <ProgressStep step={i + 1}\n                          title={step}\n                          completed={(i + 1 < props.currentStep) || (props.currentStep === steps.length)}\n                          />\n          </Col>\n        )) }\n      </Row>\n    </Container>\n  )\n}\n\nexport default DutchProgressBar\n","import React, { useState } from 'react'\nimport { Container, Form, Button, ToggleButtonGroup, ToggleButton } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUsers, faMoneyCheckAlt, faArrowRight, faDollarSign } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/ExpenditureInfo.scss'\n\nfunction ExpenditureInfo(props) {\n  const currencies = ['$', '₩', '€', '£'];\n\n  const [validated, setValidated] = useState(false);\n  const [info, setInfo] = useState({\n    title: '',\n    peopleNames: '',\n    currency: currencies[0],\n  });\n\n  function handleInputChange(event) {\n    setInfo({\n      ...info,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  function handleCurrencyChange(value) {\n    setInfo({\n      ...info,\n      currency: value\n    })\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const form = event.currentTarget\n    const validated = form.checkValidity()\n    setValidated(true)\n\n    if (info.title === '' && info.peopleNames === '' &&\n        props.expenditureInfo.title !== '' &&\n        props.expenditureInfo.peopleNames.length > 0) {\n      if (props.onSubmitSucceeded) {\n        props.onSubmitSucceeded({\n          title: props.expenditureInfo.title,\n          peopleNames: props.expenditureInfo.peopleNames.join(\", \"),\n          currency: props.expenditureInfo.currency\n        })\n      }\n    }\n\n    else if (validated) {\n      // window.dutch = { currency: currencies.filter(c => c === info.currency)[0] }\n      if (props.onSubmitSucceeded) {\n        props.onSubmitSucceeded(info)\n      }\n    }\n  }\n\n  return props.display && (\n    <Container fluid className=\"steps-container\">\n      <h2 className=\"step-title-header\">Expenditure information</h2>\n\n      <Form noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n            style={{ position: 'relative' }}>\n        <Form.Group controlId=\"title\">\n          <Form.Label><FontAwesomeIcon icon={faMoneyCheckAlt} /> What is bills about you want to split?</Form.Label>\n          <Form.Control name=\"title\"\n                        required\n                        type=\"text\"\n                        placeholder=\"2020 Vancouver trip!\"\n                        defaultValue={props.expenditureInfo.title}\n                        onChange={handleInputChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"group-members\">\n          <Form.Label><FontAwesomeIcon icon={faUsers} /> Who do you want to split with?</Form.Label>\n          <Form.Control required\n                        name=\"peopleNames\"\n                        type=\"text\"\n                        placeholder=\"Aree, Tomas, Jessica\"\n                        defaultValue={props.expenditureInfo.peopleNames.join(\", \")}\n                        onChange={handleInputChange} />\n          <Form.Text>Enter the names of people separating with comma (,)</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"currency\">\n          <Form.Label><FontAwesomeIcon icon={faDollarSign} /> Select the currency</Form.Label>\n          <br/>\n          <ToggleButtonGroup id=\"currency-button-group\"\n                             type=\"radio\"\n                             name=\"currency\"\n                             defaultValue={props.expenditureInfo.currency || info.currency}\n                             onChange={handleCurrencyChange}>\n            { currencies.map((currency, _) =>\n                <ToggleButton value={currency}\n                              key={currency}>{currency}</ToggleButton>)}\n          </ToggleButtonGroup>\n\n        </Form.Group>\n\n        <Button className=\"next-button\" type=\"submit\">\n          Next <FontAwesomeIcon icon={faArrowRight}/>\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default ExpenditureInfo;\n","import React, { useState } from 'react'\nimport { Form, Button, Col, Card, InputGroup } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt, faStore, faUser, faPlus, faMoneyBillWave } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/NewBillForm.scss'\n\nfunction NewBillForm(props) {\n  const [validated, setValidated] = useState(false);\n  const [billInfo, setBillInfo] = useState({\n    billDate: '',\n    billName: '',\n    billAmount: 0,\n    billPayer: props.peopleNames[0],\n    id: '',\n  });\n\n  const handleInputChange = (event) => {\n    const name = event.target.name\n    setBillInfo({\n      ...billInfo,\n      [name]: name === 'number' ? event.target.valueAsNumber\n                                  : event.target.value,\n    });\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const form = event.currentTarget\n    const validated = form.checkValidity()\n    setValidated(true)\n\n    if (validated && props.onSubmitSucceeded) {\n      setBillInfo({\n        ...billInfo,\n        billAmount: billInfo.billAmount,\n        id: new Date().toJSON()\n      })\n      props.onSubmitSucceeded(billInfo)\n      form.reset()\n      setValidated(false)\n    }\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Add new bill</Card.Title>\n        <Form noValidate\n              validated={validated}\n              onSubmit={handleSubmit}>\n          <Form.Row>\n            <Col xs={6} md={5}>\n              <Form.Group controlId=\"billAmount\">\n                <Form.Label>\n                  <FontAwesomeIcon icon={faMoneyBillWave} /> Amount *\n                </Form.Label>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>{props.currencySymbol}</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control required\n                                name=\"billAmount\"\n                                type=\"number\"\n                                step=\"0.01\"\n                                onChange={handleInputChange} />\n                </InputGroup>\n              </Form.Group>\n            </Col>\n\n            <Col xs={6} md={7}>\n              <Form.Group controlId=\"billPayer\">\n                <Form.Label>\n                  <FontAwesomeIcon icon={faUser} /> Payer *\n                </Form.Label>\n                <Form.Control required\n                              name=\"billPayer\"\n                              as=\"select\"\n                              onChange={handleInputChange}>\n                  { props.peopleNames.map(name => <option key={name}>{name}</option>) }\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col xs={12} md={5}>\n              <Form.Group controlId=\"billName\">\n                <Form.Label>\n                  <FontAwesomeIcon icon={faStore} /> Description\n                </Form.Label>\n                <Form.Control name=\"billName\"\n                              type=\"text\"\n                              onChange={handleInputChange} />\n              </Form.Group>\n            </Col>\n            <Col xs={7} md={5}>\n              <Form.Group controlId=\"billDate\">\n                <Form.Label>\n                  <FontAwesomeIcon icon={faCalendarAlt} /> Bill date\n                </Form.Label>\n                <Form.Control name=\"billDate\"\n                              type=\"date\"\n                              onChange={handleInputChange} />\n              </Form.Group>\n            </Col>\n            <Col xs={5} md={2}>\n              <Button className=\"add-button\"\n                      type=\"submit\">\n                Add <FontAwesomeIcon icon={faPlus}/>\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Card.Body>\n    </Card>\n  )\n}\nexport default NewBillForm;\n","import React from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/BillsTable.scss'\n\nfunction BillsTable(props) {\n  const columnNames = [\n    'Payer',\n    'Amount',\n    'Description',\n    'Date',\n    'Actions'\n  ]\n  if (!props.actionsShow) {\n    columnNames.pop()\n  }\n\n  return (\n    <Table responsive={props.responsive}\n           className={`${props.additionalClassName} bill-table mt-4`}>\n      <thead>\n        <tr>\n          <th>#</th>\n          { columnNames.map((columnName, _) => (\n            <th key={columnName}>{columnName}</th>\n          )) }\n        </tr>\n      </thead>\n      <tbody>\n      { props.bills.map((bill, index) => (\n        <tr key={bill.id}>\n          <td>{index + 1}</td>\n          <td>{bill.billPayer}</td>\n          <td>{props.currencySymbol} {bill.billAmount.toLocaleString()}</td>\n          <td>{bill.billName}</td>\n          <td>{bill.billDate}</td>\n          { props.actionsShow &&\n            <td>\n              <Button variant=\"link\"\n                      className=\"p-0\"\n                      onClick={() => props.onBillDeletionClicked(bill)}>\n                <FontAwesomeIcon icon={faTrashAlt}/>\n              </Button>\n            </td>\n          }\n        </tr>\n      )) }\n      </tbody>\n    </Table>\n  )\n}\nBillsTable.defaultProps = {\n  actionsShow: true,\n  responsive: true,\n  additionalClassName: '',\n  currencySymbol: '$',\n  bills: [],\n}\nexport default BillsTable;\n","import React, { useState } from 'react'\nimport { Container, Button, Toast } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n\nimport NewBillForm from 'components/NewBillForm'\nimport BillsTable from 'components/BillsTable'\n\nimport 'components/DutchToast.scss'\n\nfunction BillsInfo(props) {\n  const [bills, setBills] = useState([])\n  const [toastShow, setToastShow] = useState(false)\n\n  const handleNextButtonClicked = () => {\n    if (props.bills.length === 0 && (!bills || bills.length === 0)) {\n      setToastShow(true)\n      return\n    }\n\n    setToastShow(false)\n    if (props.onSubmitSucceeded) {\n      props.onSubmitSucceeded(defaultBillExists() ? props.bills : bills);\n    }\n  }\n\n  const addBill = (bill) => {\n    const newBills = defaultBillExists() ? props.bills.concat(bill) : [...bills, bill]\n\n    setBills(newBills)\n    if (props.onBillUpdated) {\n      props.onBillUpdated(newBills)\n    }\n  }\n\n  const deleteBill = (billToDelete) => {\n    const billList = defaultBillExists() ? props.bills : bills;\n    const deletedBills = billList.filter((bill) => bill.id !== billToDelete.id)\n\n    setBills(deletedBills)\n    if (props.onBillUpdated) {\n      props.onBillUpdated(deletedBills)\n    }\n  }\n\n  function defaultBillExists() {\n      return (bills.length === 0 && props.bills.length > 0)\n  }\n\n  return props.display && (\n    <Container fluid className=\"steps-container\">\n      <h2 className=\"step-title-header\">Bill information</h2>\n\n      <NewBillForm onSubmitSucceeded={addBill}\n                   peopleNames={props.peopleNames}\n                   currencySymbol={props.currencySymbol} />\n\n      <BillsTable onBillDeletionClicked={deleteBill}\n                  bills={(bills.length === 0) ? props.bills : bills}\n                  currencySymbol={props.currencySymbol}\n                  actionsShow={true} />\n\n      <div style={{ position: 'relative '}}>\n        <Button className=\"next-button\" onClick={handleNextButtonClicked}>\n          Next <FontAwesomeIcon icon={faArrowRight}/>\n        </Button>\n      </div>\n\n      <div className=\"toast-container\">\n          <Toast onClose={() => setToastShow(false)} className='error-toast' show={toastShow} delay={3000} autohide>\n            <Toast.Header>\n              <FontAwesomeIcon icon={faExclamationTriangle} className=\"rounded mr-2\"/>\n              <strong className=\"mr-auto\">Error occurred</strong>\n            </Toast.Header>\n            <Toast.Body>There should be at least 1 bill entered</Toast.Body>\n          </Toast>\n      </div>\n    </Container>\n  )\n}\n\nexport default BillsInfo;\n","import React, { useState, useRef }from 'react'\nimport { Container, Button, Card, Row, Col, Table, Toast } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faExclamationTriangle, faPaperPlane, faCopy, faDownload, faSpinner, faRedo } from '@fortawesome/free-solid-svg-icons'\nimport domtoimage from 'dom-to-image'\nimport { saveAs } from 'file-saver'\n\nimport BillsTable from 'components/BillsTable'\nimport 'components/Settlement.scss'\nimport 'components/DutchToast.scss'\n\nfunction Settlement(props) {\n  const reportElem = useRef(null);\n  const settlementTableElem = useRef(null);\n\n  const [downloading,       setDownloading]       = useState(false)\n  const [copiedToastShow,   setCopiedToastShow]   = useState(false)\n  const [downloadToastShow, setDownloadToastShow] = useState(false)\n\n  if (!props.bills) {\n      return <div>No bills entered</div>\n  }\n\n  const expenditure    = props.expenditureInfo\n  const bills          = props.bills\n  const sum            = bills.length === 0 ? 0 :\n                          bills.flatMap(b => b.billAmount)\n                               .reduce((a,b) => parseInt(a) + parseInt(b))\n  const amountByPerson = sum / expenditure.peopleNames.length\n\n  const debtByPerson = (() => {\n    var debt = {}\n    expenditure.peopleNames.forEach(name =>\n      debt[name] = amountByPerson)\n    bills.forEach(bill =>\n      debt[bill.billPayer] = debt[bill.billPayer] - bill.billAmount)\n\n    return Object.keys(debt).map(name => ({\n      name: name,\n      amount: debt[name]\n    }))\n  })()\n\n  const transactions = ((debtByPerson) => {\n    debtByPerson.sort((a, b) => a.amount - b.amount)\n    const transactions = []\n\n    for (var left = 0, right = debtByPerson.length - 1; left < right;) {\n\n      const receiver = debtByPerson[left]\n      const sender = debtByPerson[right]\n      if (!receiver || !sender) {\n        break;\n      }\n      const receiverAmount = receiver.amount\n      const senderAmount = sender.amount\n\n      if (receiverAmount + senderAmount < 0) {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: senderAmount\n        })\n\n        debtByPerson[left].amount += senderAmount\n        debtByPerson[right].amount -= senderAmount\n\n        right -= 1\n      }\n      else if (receiverAmount + senderAmount > 0) {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: Math.abs(receiverAmount)\n        })\n\n        debtByPerson[left].amount = 0\n        debtByPerson[right].amount += receiverAmount\n\n        left += 1\n      }\n      else {\n        transactions.push({\n          sender: sender.name,\n          receiver: receiver.name,\n          amount: senderAmount\n        })\n\n        debtByPerson[left].amount = 0\n        debtByPerson[right].amount = 0\n\n        left += 1\n        right -= 1\n      }\n    }\n\n    return transactions\n  })(debtByPerson)\n\n  const transactionToString = transactions.flatMap(a => `${a.sender}->${a.receiver} : ${Math.round(a.amount * 10) / 10}`)\n                                          .join(\", \")\n\n  function copyToClipboard() {\n    var $text = document.createElement(\"input\")\n    $text.value = transactionToString\n    document.body.appendChild($text)\n    $text.select()\n    $text.setSelectionRange(0, 99999) /* For mobile devices */\n    document.execCommand(\"copy\")\n    document.body.removeChild($text)\n\n    setCopiedToastShow(true)\n  }\n\n  function download() {\n    setDownloading(true)\n\n    settlementTableElem.current.classList.add(\"bill-table-mobile\")\n    domtoimage.toBlob(reportElem.current)\n    .then(function(blob) {\n        settlementTableElem.current.classList.remove(\"bill-table-mobile\")\n        saveAs(blob, `${expenditure.title.split(' ').join('_')}.png`)\n    })\n\n    setDownloading(false)\n    setDownloadToastShow(true)\n  }\n\n  return props.display && (\n    <Container fluid\n               className=\"steps-container\">\n      <div className=\"report-container\">\n        <div ref={reportElem} id=\"report\">\n          <h2 className=\"step-title-header\">Settlement</h2>\n\n          <Card>\n            <Card.Body>\n              <Card.Title>{expenditure.title}</Card.Title>\n              <Card.Subtitle> with {expenditure.peopleNames.join(', ')}</Card.Subtitle>\n\n              <Card.Text>\n                Sum of all bills: <b>{props.currencySymbol}{sum.toLocaleString()}</b><br/>\n                Cost of each person: <b>{props.currencySymbol}{amountByPerson.toLocaleString()}</b>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n          <br/>\n\n          <h3>Bill list</h3>\n          <div ref={settlementTableElem}>\n            <BillsTable bills={bills}\n                        currencySymbol={props.currencySymbol}\n                        actionsShow={false}\n                        responsive={true} />\n          </div>\n\n          <Card border={'success'}>\n            <Card.Body>\n              <Card.Title>Minimum transaction</Card.Title>\n\n              <Table id=\"transaction-table\"\n                     borderless\n                     responsive\n                     size=\"sm\">\n                <tbody>\n                {transactions.map((transaction, index) =>\n                  <tr key={`transaction-row-${index}`}>\n                    <td><FontAwesomeIcon icon={faPaperPlane} /></td>\n                    <td>{transaction.sender}</td>\n                    <td><FontAwesomeIcon icon={faArrowRight} /></td>\n                    <td>{transaction.receiver}</td>\n                    <td>:</td>\n                    <td>{props.currencySymbol}{(Math.round(transaction.amount * 10) / 10).toLocaleString()}</td>\n                  </tr>\n                )}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n\n      <Row className=\"mt-3\">\n        <Col xs={12} md={6}>\n          <Button className=\"action-button\"\n                  onClick={copyToClipboard}>\n            <FontAwesomeIcon icon={faCopy}/>&nbsp;Copy to clipboard\n          </Button>\n        </Col>\n        <Col xs={12} md={6}>\n          <Button className=\"action-button\"\n                  onClick={download}>\n           { downloading ?\n            <FontAwesomeIcon icon={faSpinner} spin /> :\n            <FontAwesomeIcon icon={faDownload}/> }\n            &nbsp;\n           { downloading ? 'Downloading' : 'Download the report' }\n          </Button>\n        </Col>\n      </Row>\n\n      <Row className=\"mt-5\">\n        <Col xs={{ span: 10, offset: 1 }}>\n          <a className=\"text-center d-block\" href=\"/\">\n            <FontAwesomeIcon icon={faRedo}/>&nbsp;Begin new dutch pay\n          </a>\n        </Col>\n      </Row>\n\n      <div className=\"toast-container\">\n        <Toast onClose={() => {setCopiedToastShow(false)}}\n               show={copiedToastShow}\n               className='success-toast'\n               delay={3000}\n               autohide>\n          <Toast.Header>\n            <FontAwesomeIcon icon={faExclamationTriangle}\n                             className=\"rounded mr-2\"/>\n            <strong className=\"mr-auto\">Copied to clipboard!</strong>\n          </Toast.Header>\n          <Toast.Body>{ transactionToString }</Toast.Body>\n        </Toast>\n\n        <Toast onClose={() => {setDownloadToastShow(false)}}\n               show={downloadToastShow}\n               className='success-toast'\n               delay={3000}\n               autohide>\n          <Toast.Header>\n            <FontAwesomeIcon icon={faExclamationTriangle}\n                             className=\"rounded mr-2\"/>\n            <strong className=\"mr-auto\">Download completed!</strong>\n          </Toast.Header>\n          <Toast.Body>Check the download folder.. :)</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  )\n}\n\nexport default Settlement;\nSettlement.defaultProps = {\n  currencySymbol: '$',\n  expenditureInfo: {title: '', peopleNames: ['']},\n  bills: [{billDate: '', billName: '', billAmount: 0, billPayer: ''}]\n}\n// rename to settlement\n","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShareAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport 'components/DutchForm.scss'\nimport DutchProgressBar from 'components/DutchProgressBar'\nimport ExpenditureInfo from 'components/ExpenditureInfo'\nimport BillsInfo from 'components/BillsInfo'\nimport Settlement from 'components/Settlement'\n\nconst codec = require('json-url')('lzma')\n\nclass DutchForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      expenditureInfo: {\n        title: '',\n        peopleNames: [''],\n        currency: ''\n      },\n      bills: [\n        // {id: null, billAmount: 0, billPayer: '', billName: '', billDate: ''}\n      ],\n      currentStep: 1,\n      expenditureInfoDisplayed: true,\n      billsInfoDisplayed: false,\n      resultDisplayed: false\n    }\n\n    this.afterStep1Submitted = this.afterStep1Submitted.bind(this)\n    this.afterStep2Submitted = this.afterStep2Submitted.bind(this)\n    this.updateBillInfo      = this.updateBillInfo.bind(this)\n    this.generateURL         = this.generateURL.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.compressedURL !== '') {\n      document.getElementById(\"dutch-form\").scrollIntoView()\n    }\n\n    codec.decompress(this.props.compressedURL)\n      .then(json => this.setState(json))\n  }\n\n  generateURL() {\n    codec.compress(this.state)\n      .then(compressedURL => {\n        var newURL = window.location.origin + window.location.pathname + '?c=' + compressedURL\n\n        var $text = document.createElement(\"input\")\n        $text.value = newURL\n        document.body.appendChild($text)\n        $text.select()\n        $text.setSelectionRange(0, 99999) /* For mobile devices */\n        document.execCommand(\"copy\")\n        document.body.removeChild($text)\n        alert(\"URL copied!\\nShare to your group and they can see all the contents that you just entered\")\n      })\n  }\n\n  afterStep1Submitted(info) {\n    this.setState({\n      expenditureInfo: {\n        title: info.title,\n        peopleNames: info.peopleNames.split(\",\").map(name => name.trim()),\n        currency: info.currency\n      },\n      currentStep: 2,\n      expenditureInfoDisplayed: false,\n      billsInfoDisplayed: true\n    })\n  }\n\n  updateBillInfo(bills) {\n    this.setState({\n      bills: bills\n    })\n  }\n\n  afterStep2Submitted(bills) {\n    this.setState({\n      bills: bills,\n      currentStep: 3,\n      billsInfoDisplayed: false,\n      resultDisplayed: true\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"dutch-form\">\n\n        <DutchProgressBar currentStep={this.state.currentStep} />\n\n        <ExpenditureInfo display={this.state.expenditureInfoDisplayed}\n                         expenditureInfo={this.state.expenditureInfo}\n                         onSubmitSucceeded={this.afterStep1Submitted} />\n\n        <BillsInfo display={this.state.billsInfoDisplayed}\n                   bills={this.state.bills}\n                   onBillUpdated={this.updateBillInfo}\n                   onSubmitSucceeded={this.afterStep2Submitted}\n                   currencySymbol={this.state.expenditureInfo.currency}\n                   peopleNames={this.state.expenditureInfo.peopleNames} />\n\n        <Settlement display={this.state.resultDisplayed}\n                    expenditureInfo={this.state.expenditureInfo}\n                    currencySymbol={this.state.expenditureInfo.currency}\n                    bills={this.state.bills} />\n\n        <div id=\"share-area\">\n          <Button id=\"share-btn\" onClick={this.generateURL}>\n            <FontAwesomeIcon icon={faShareAlt}/>\n          </Button>\n          <br/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DutchForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nimport 'components/Footer.scss'\n\nfunction Footer() {\n  const issueURL = \"https://github.com/dutch-pay/dutch-pay.github.io/issues/new\"\n\n  return (\n    <div id=\"footer-container\">\n      <span>\n        <b>Have new feature request? Found a bug?</b>\n        <br/>\n        Feel free to create an issue&nbsp;\n        <a target=\"_blank\"\n           rel=\"noopener noreferrer\"\n           href={issueURL}>here</a>\n      </span>\n\n      <footer>\n      Designed and developed by Aree Oh, &nbsp;\n      <a target=\"_blank\"\n         rel=\"noopener noreferrer\"\n         href=\"https://www.linkedin.com/in/aree-oh/\">\n        <FontAwesomeIcon icon={faLinkedin} />\n      </a>&nbsp;&nbsp;\n      <a target=\"_blank\"\n         rel=\"noopener noreferrer\"\n         href=\"https://github.com/aria-grande\">\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Footer;\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDivide } from '@fortawesome/free-solid-svg-icons'\n\nimport 'App.scss'\nimport DutchForm from 'components/DutchForm'\nimport Footer from 'components/Footer'\n\n\nfunction App() {\n\n  function scrollToForm() {\n    document.getElementById(\"dutch-form\").scrollIntoView({\n      behavior: 'smooth'\n    })\n  }\n\n  const renderIntroduction = () => (\n    <div id=\"introduction\">\n      <header className=\"header\">\n        <h1>\n          <FontAwesomeIcon icon={faDivide}\n                           className=\"App-logo\"\n                           alt=\"logo\"\n                           size=\"lg\"\n                           spin\n                           />\n          &nbsp;&nbsp;&nbsp;\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <span>Split bills with friends!</span>\n        </h1>\n\n        <p className=\"p-3\">\n        It's not a simple calculator that lets you know how much you have to pay for a bill paid by one person.<br/>\n        <span className=\"highlight\">Dutch pay</span> will calculate and split every bills paid by multiple people.<br/><br/>\n        <i className=\"quote\">\n          I went to a trip with my friends and each of us spent different amount of money for buying food, drinks and etc. After the trip, I was struggled with how to spilt all the bills. At that moment, I used this and it was super easy. What I did was just entering all the bills and DutchPay solved the problem!\n          <br/>\n          - Aree\n        </i>\n        <br/>\n        <br/>\n        Enter every bills, we will let you know<br/>\n        how to split bills with <span className=\"highlight\">minimum transaction!</span><br/>\n        </p>\n      </header>\n\n      <div>\n        <Button className=\"start-button\"\n                size=\"lg\"\n                onClick={scrollToForm}>Get started!</Button>\n      </div>\n    </div>\n  )\n\n  const getCompressedURL = () => {\n    const contentParamKey = 'c'\n    const params = new URLSearchParams(window.location.search)\n\n    return params.has(contentParamKey) ? params.get(contentParamKey) : ''\n  }\n\n  return (\n    <div className=\"App\">\n\n      { renderIntroduction() }\n\n      <DutchForm compressedURL={getCompressedURL()} />\n\n      <div id=\"kofi\">\n        <span>Did you enjoy dutch paying?</span><br/>\n        <a href='https://ko-fi.com/G2G22LHXS'\n           target='_blank'>\n          <img height='36'\n               style={{ 'border':'0px', 'height':'36px' }}\n               src='https://cdn.ko-fi.com/cdn/kofi2.png?v=2'\n               border='0'\n               alt='Buy Me a Coffee at ko-fi.com' />\n        </a>\n      </div>\n\n      <Footer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}